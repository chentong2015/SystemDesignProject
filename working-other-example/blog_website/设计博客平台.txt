Design Scalable Blog

1. Use cases / core services / features
- Create Blog
- Update Blog
- Search Blog by keywords

2. Math
- how many user use per day
- how many times of creation / searching per minutes 500/s
- Data Storage 需要了解大致的数据存储量
  - Average Size per Blog 2MB
  - how many blogs for 10 years: 2MB * 100/day * 356 * 10 = 700GB

3. High Level Design 通常包含两个大的部分：请求的接收和Data存储
- UI:
  - Post + Search Button
  - Blog page
  - Uer profile page
- Backend Service: Blog Service
  - Request handling
  - data layer for saving and selecting
- Database

4. Dive into System
- API Endpoints:
  POST: /v1/api/blogs
  GET: /v1/api/blogs?id=001
- Start from one machine
- Latency: 分析并发请求如何实现，分析单个请求的处理时间 ！
  - Multi-threads on server
  - Caching
  - Scale single server by adding LB + Cluster of services

5. Data Storage
Blog table:
id, title, tag, description, content(text), link_image, link_video

CDN: Image_storage
- retrieve images by link form Image_storage
- retrieve videos by link form Video_storage

Relational Database:
- One table can store all blog info
- Db sharding/Scaling
  - partition of data
  - duplication of data (to support fault tolerance)
  - separate Writing and Reading 分离DB的读写操作